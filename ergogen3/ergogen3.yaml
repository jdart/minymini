units:
  kx: cx
  ky: cy
  px: 2
  py: 2
  controller_shift_y: 0
  controller_y: 59.5
  controller_x: 23
  kyt: 0.5(ky+py)
  kyb: -0.5(ky+py)
  kxr: 0.5(kx+px)
  kxl: -0.5(kx+px)
  board_thickness: 1.6
  key_clip_depth: 1.3
  key_surface_depth: 2.2
  case_bottom_thickness: 1.6
  case_wall_thickness: 1.6
  case_bottom_offset: 3.15
  case_leg_mount_thickness: 8
  case_leg_mount_width: 12
  case_leg_mount_hole_depth: 7
  case_leg_mount_hole_diameter: 5
  case_depth: case_bottom_thickness + case_bottom_offset + board_thickness + key_surface_depth + 1
points:
  key:
    footprints:
      choc_hotswap:
        type: chocmini
        params:
          hotswap: true
          reverse: true
          keycaps: true
        nets:
          # from: P1
          # to: P2
          from: =colrow
          to: =column_net
      diode:
        type: diode
        nets:
          # from: P3
          # to: P4
          from: =colrow
          to: =row_net
        anchor:
          shift: [0, -5]
  zones:
    matrix:
      # anchor:
      #   rotate: 5
      key.padding: ky
      columns:
        pinky:
          stagger: 0 ky
          spread: kx
          key:
            column_net: P20
        ring:
          rotate: 0
          stagger: 1 ky
          spread: kx
          key:
            column_net: P19
        middle:
          rotate: 0
          stagger: 0.4 ky
          spread: kx
          key:
            column_net: P18
        index:
          stagger: -0.3 ky
          spread: kx
          key:
            column_net: P15
        inner:
          stagger: 0 ky
          spread: kx
          key:
            column_net: P14
      rows:
        bottom:
          row_net: P6
        home:
          row_net: P5
        top:
          row_net: P4
    thumbfan:
      anchor:
        ref: matrix_inner_bottom
        shift: [-2.5 kx, -1.1 ky]
      columns:
        near:
          spread: kx
          rotate: -10
          origin: [-0.5 kx, -0.5 ky]
          key:
            column_net: P18
        home:
          spread: kx
          rotate: -10
          origin: [-0.5 kx, -0.5 ky]
          key:
            column_net: P15
        far:
          spread: kx
          rotate: -10
          origin: [-0.5 kx, -0.5 ky]
          key:
            column_net: P14
      rows:
        thumb:
          row_net: P7
outlines:
  # board dimensions according to JLCPCB: 122.28 mm x 101.05 mm
  exports:
    raw:
      - type: keys
        side: left
        size: [kx + px, ky + py]
        corner: px
    _board_perimeter:
      - type: polygon
        points:
          # top of fingers
          - ref: matrix_pinky_top
            shift: [ kxl, kyt ]
          - ref: matrix_pinky_top
            shift: [ kxr, kyt ]
          - ref: matrix_ring_top
            shift: [ kxl, kyt ]
          - ref: matrix_ring_top
            shift: [ kxr, kyt ]
          - ref: matrix_middle_top
            shift: [ kxl, kyt ]
          - ref: matrix_middle_top
            shift: [ kxr, kyt ]
          - ref: matrix_index_top
            shift: [ kxl, kyt ]
          - ref: matrix_index_top
            shift: [ kxr, kyt ]
          - ref: matrix_inner_top
            shift: [ kxl, kyt ]
          - ref: matrix_inner_top
            shift: [ kxr, kyt ]
          # controller area
          - ref: matrix_inner_top
            shift: [ kxr, kyt + controller_shift_y ]
          - ref: matrix_inner_top
            shift: [ kxr+controller_x, kyt + controller_shift_y ]
          - ref: matrix_inner_top
            shift: [ kxr+controller_x, kyt + controller_shift_y ]
          - ref: matrix_inner_top
            shift: [ kxr+controller_x, kyt + controller_shift_y - controller_y]
          #thumb cluster
          - ref: thumbfan_far_thumb
            shift: [ kxr, kyt ]
          - ref: thumbfan_far_thumb
            shift: [ kxr, kyb ]
          - ref: thumbfan_near_thumb
            shift: [ kxl, kyb ]
          #bottom of fingers
          - ref: matrix_pinky_bottom
            shift: [ kxr, kyb ]
          - ref: matrix_pinky_bottom
            shift: [ kxl, kyb ]
    _plate_perimeter:
      - type: polygon
        points:
          # top of fingers
          - ref: matrix_pinky_top
            shift: [ kxl, kyt ]
          - ref: matrix_pinky_top
            shift: [ kxr, kyt ]
          - ref: matrix_ring_top
            shift: [ kxl, kyt ]
          - ref: matrix_ring_top
            shift: [ kxr, kyt ]
          - ref: matrix_middle_top
            shift: [ kxl, kyt ]
          - ref: matrix_middle_top
            shift: [ kxr, kyt ]
          - ref: matrix_index_top
            shift: [ kxl, kyt ]
          - ref: matrix_index_top
            shift: [ kxr, kyt ]
          - ref: matrix_inner_top
            shift: [ kxl, kyt ]
          - ref: matrix_inner_top
            shift: [ kxr, kyt ]
          #bottom of fingers and thumb
          - ref: matrix_inner_bottom
            shift: [ kxr, kyb ]
          - ref: thumbfan_far_thumb
            shift: [ kxr, kyt ]
          - ref: thumbfan_far_thumb
            shift: [ kxr, kyb ]
          - ref: thumbfan_near_thumb
            shift: [ kxl, kyb ]
          - ref: matrix_pinky_bottom
            shift: [ kxr, kyb ]
          - ref: matrix_pinky_bottom
            shift: [ kxl, kyb ]
    _case_perimeter:
      - type: polygon
        points:
          # top of fingers
          - ref: matrix_pinky_top
            shift: [ kxl - case_wall_thickness, kyt+case_wall_thickness ]
          - ref: matrix_pinky_top
            shift: [ kxr - case_wall_thickness - px, kyt + case_wall_thickness ]
          - ref: matrix_ring_top
            shift: [ kxl - case_wall_thickness, kyt + case_wall_thickness ]
          - ref: matrix_ring_top
            shift: [ kxr - case_wall_thickness - px, kyt + case_wall_thickness ]
          - ref: matrix_middle_top
            shift: [ kxl - case_wall_thickness, kyt + case_wall_thickness + 2.2]
          - ref: matrix_middle_top
            shift: [ kxr + case_wall_thickness, kyt + case_wall_thickness + 2.2]
          - ref: matrix_index_top
            shift: [ kxl + case_wall_thickness + px, kyt + case_wall_thickness ]
          - ref: matrix_index_top
            shift: [ kxr + case_wall_thickness, kyt + case_wall_thickness ]
          - ref: matrix_inner_top
            shift: [ kxl + case_wall_thickness, kyt + case_wall_thickness ]
          - ref: matrix_inner_top
            shift: [ kxr + case_wall_thickness, kyt + case_wall_thickness ]
          # controller area
          - ref: matrix_inner_top
            shift: [ kxr + case_wall_thickness, kyt + controller_shift_y + case_wall_thickness ]
          - ref: matrix_inner_top
            shift: [ kxr+controller_x + case_wall_thickness + case_leg_mount_thickness, kyt + controller_shift_y + case_wall_thickness ]
          - ref: matrix_inner_top
            shift: [ kxr+controller_x + case_wall_thickness + case_leg_mount_thickness, kyt + controller_shift_y + case_wall_thickness - case_leg_mount_width]
          - ref: matrix_inner_top
            shift: [ kxr+controller_x + case_wall_thickness, kyt + controller_shift_y + case_wall_thickness - case_leg_mount_width ]
          - ref: matrix_inner_top
            shift: [ kxr+controller_x + case_wall_thickness, kyt + controller_shift_y - controller_y - case_wall_thickness + py/2]
          #thumb cluster
          - ref: thumbfan_far_thumb
            shift: [ kxr + case_wall_thickness, kyt + case_wall_thickness ]
          - ref: thumbfan_far_thumb
            shift: [ kxr + case_wall_thickness, kyb - case_wall_thickness + case_leg_mount_width]
          - ref: thumbfan_far_thumb
            shift: [ kxr + case_wall_thickness + case_leg_mount_thickness, kyb - case_wall_thickness + case_leg_mount_width]
          - ref: thumbfan_far_thumb
            shift: [ kxr + case_wall_thickness + case_leg_mount_thickness, kyb - case_wall_thickness]
          - ref: thumbfan_near_thumb
            shift: [ kxl - case_wall_thickness + px , kyb - case_wall_thickness ]
          #bottom of fingers
          - ref: matrix_pinky_bottom
            shift: [ kxr + case_wall_thickness, kyb - case_wall_thickness]
          - ref: matrix_pinky_bottom
            shift: [ kxl - case_wall_thickness, kyb - case_wall_thickness]
    _thumb_leg_mount_hole:
      main:
        type: circle
        anchor:
            - ref: thumbfan_far_thumb
              shift: [ kxr + case_wall_thickness + case_leg_mount_thickness -case_leg_mount_hole_depth, kyb - case_wall_thickness + case_leg_mount_width / 2]
        radius: case_leg_mount_hole_diameter/2

    _top_leg_mount_hole:
      main:
        type: circle
        anchor:
          - ref: matrix_inner_top
            shift: [ kxr+controller_x + case_wall_thickness + case_leg_mount_thickness - case_leg_mount_hole_depth, kyt + controller_shift_y + case_wall_thickness - case_leg_mount_width / 2 ]
        radius: case_leg_mount_hole_diameter/2
    _switches:
      main:
        type: keys
        side: left
        size: 14
        bound: false
    _keycaps:
      main:
        type: keys
        side: left
        size: [kx, ky]
        bound: false
        corner: 1
    _keywell:
      main:
        type: outline
        name: raw
      plate_perimeter:
        type: outline
        name: _plate_perimeter
        operation: add
        fillet: px
    _base_outline:
      main:
        type: outline
        name: _keywell
      controller:
        type: outline
        name: _board_perimeter
        fillet: px
        operation: add
    _side_outline:
      outer:
        type: outline
        name: _case_perimeter
        fillet: px + case_wall_thickness
      inner:
        type: outline
        name: _base_outline
        operation: subtract
    _side_cut_poly:
      - type: polygon
        points:
          - ref: matrix_inner_top
            shift: [ 32, -48 + controller_shift_y ]
          - ref: matrix_inner_top
            shift: [ 32+5, -48 + controller_shift_y ]
          - ref: matrix_inner_top
            shift: [ 32+5, -48 + controller_shift_y + 19]
          - ref: matrix_inner_top
            shift: [ 32, -48 + controller_shift_y + 19]
    _side_cut:
      main:
        type: outline
        name: _side_cut_poly
        fillet: 2.45
    _top_cut_poly:
      - type: polygon
        points:
          - ref: matrix_inner_top
            shift: [ kxr+5.3, kyt]
          - ref: matrix_inner_top
            shift: [ kxr+5.3+12, kyt ]
          - ref: matrix_inner_top
            shift: [ kxr+5.3+12, kyt-4.8 ]
          - ref: matrix_inner_top
            shift: [ kxr+5.3, kyt-4.8 ]
    _top_cut:
      main:
        type: outline
        name: _top_cut_poly
        fillet: 0.8
    _screw_holes:
      top_left:
        type: circle
        anchor:
          - ref: matrix_ring_home
            shift: [-0.5 kx,  -0.2 ky]
        radius: 1.05
      bottom_left:
        type: circle
        anchor:
          - ref: matrix_pinky_bottom
            shift: [0.5 kx,  -0.2 ky]
        radius: 1.05
      top_right:
        type: circle
        anchor:
          - ref: matrix_inner_top
            shift: [-0.5 kx,  -0.2 ky]
        radius: 1.05
      palm:
        type: circle
        anchor:
          - ref: matrix_index_bottom
            shift: [-0.5 kx, -0.2 ky]
        radius: 1.05
      thumb:
        type: circle
        anchor:
          - ref: thumbfan_far_thumb
            shift: [-0.55 kx, -0.2 ky]
        radius: 1.05
    _mounting_holes:
      $extends: outlines.exports._screw_holes
      top_left:
        radius: 2.05
      bottom_left:
        radius: 2.05
      top_right:
        radius: 2.05
      palm:
        radius: 2.05
      thumb:
        radius: 2.05
    _mounting_posts:
      $extends: outlines.exports._screw_holes
      top_left:
        radius: 2
      bottom_left:
        radius: 2
      top_right:
        radius: 2
      palm:
        radius: 2
      thumb:
        radius: 2
    _mounting_post_offsets:
      $extends: outlines.exports._screw_holes
      top_left:
        radius: 3
      bottom_left:
        radius: 3
      top_right:
        radius: 3
      palm:
        radius: 3
      thumb:
        radius: 3
    _mounting_post_holes:
      $extends: outlines.exports._screw_holes
      top_left:
        radius: .85
      bottom_left:
        radius: .85
      top_right:
        radius: .85
      palm:
        radius: .85
      thumb:
        radius: .85
    bottom_outline:
      main:
        type: outline
        name: _base_outline
      screw_holes:
        type: outline
        # TODO use footprints with pad + via reinforcement as mounting holes
        name: _screw_holes
        operation: subtract
    plate:
      main:
        type: outline
        name: _keywell
      switches:
        type: outline
        name: _switches
        operation: subtract
      mounting_holes:
        type: outline
        # TODO use footprints with pad + via reinforcement as mounting holes
        name: _screw_holes
        operation: subtract
    pcb:
      main:
        type: outline
        name: _base_outline
      mounting_holes:
        type: outline
        # TODO use plated through hole footprints as mounting holes
        name: _mounting_holes
        operation: subtract
  _bottom:
    - type: outline
      name: pcb
      extrude: case_bottom_thickness
    - type: outline
      name: _mounting_post_offsets
      extrude: case_bottom_thickness + case_bottom_offset
      operation: add
    - type: outline
      name: _mounting_posts
      extrude: case_bottom_thickness + case_bottom_offset + board_thickness + key_surface_depth - key_clip_depth
      operation: add
    - type: outline
      name: _mounting_post_holes
      extrude: case_bottom_offset + board_thickness + key_surface_depth - key_clip_depth
      shift: [0,0,case_bottom_thickness]
      operation: subtract
  _sides:
    - type: outline
      name: _side_outline
      extrude: case_depth
  _side_cut_void:
    - type: outline
      name: _side_cut
      extrude: 2+case_wall_thickness
      rotate: [ 0,90,0 ]
      shift: [ -case_wall_thickness-1,0,case_bottom_thickness + case_bottom_offset + board_thickness ]
  _top_cut_void:
    - type: outline
      name: _top_cut
      extrude: 2+case_wall_thickness
      rotate: [ 90,0,0 ]
      shift: [ 0,5,case_bottom_thickness + case_bottom_offset + board_thickness + 2.5 ]
  _thumb_leg_mount_hole:
    - type: outline
      name: _thumb_leg_mount_hole
      extrude: case_leg_mount_hole_depth+1
      rotate: [30,90,0]
      shift: [0,0, case_depth / 2]
  _top_leg_mount_hole:
    - type: outline
      name: _top_leg_mount_hole
      extrude: case_leg_mount_hole_depth+1
      rotate: [ 0,90,0 ]
      shift: [ 0,0, case_depth / 2 ]
  base:
    - type: case
      name: _bottom
    - type: case
      name: _sides
      operation: add
    - type: case
      name: _side_cut_void
      operation: subtract
    - type: case
      name: _top_cut_void
      operation: subtract
    - type: case
      name: _thumb_leg_mount_hole
      operation: subtract
    - type: case
      name: _top_leg_mount_hole
      operation: subtract

pcbs:
  top_plate:
    # include JLCJLCJLCJLC text somewhere
    include_keys: false
    outlines:
      edge:
        outline: plate
        layer: Edge.Cuts
    footprints:
      jlc_order_number:
        type: text
        anchor:
          ref:
            - matrix_ring_home
          shift: [-0.25 kx, 0.5 ky]
        params:
          text: "JLCJLCJLCJLC"
          justify: left
  bottom_plate:
    include_keys: false
    outlines:
      edge:
        outline: bottom_outline
        layer: Edge.Cuts
  board:
    outlines:
      edge:
        outline: pcb
        layer: Edge.Cuts
        # TODO there's a way to add stuff to the silkscreen layer
    footprints:
      mcu_l:
        type: promicro
        params:
          orientation: up
          batteryPins: true
        anchor:
          ref:
            - matrix_inner_top
          shift: [20, -9 + controller_shift_y]
          rotate: 270
      mcu_r:
        type: promicro
        params:
          orientation: down
          batteryPins: true
        anchor:
          ref:
            - matrix_inner_top
          shift: [22.5, -10.25 + controller_shift_y]
          rotate: 270
      pad_plus:
        type: pad
        anchor:
          ref:
            - matrix_inner_top
          shift: [23, -16 + controller_shift_y]
          rotate: 0
        params:
          front: true
          back: true
          width: 1.5
          height: 1.5
          text: "B+"
        nets:
          net: Braw
      pad_minus:
        type: pad
        anchor:
          ref:
            - matrix_inner_top
          shift: [23, -13 + controller_shift_y]
          rotate: 0
        params:
          front: true
          back: true
          width: 1.5
          height: 1.5
          text: "B-"
        nets:
          net: Bminus
      trrs_l:
        type: trrs
        anchor:
          ref:
            - matrix_inner_top
          shift: [32, -48 + controller_shift_y]
          rotate: 270
        params:
          reverse: false
          symmetric: false
        # The naming of the nets on this footprint is different from the Corne schematics.
        nets:
          A: ""
          B: VCC
          C: GND
          D: P0
      trrs_r:
        type: trrs
        anchor:
          ref:
            - matrix_inner_top
          shift: [32, -46 + controller_shift_y]
          rotate: 270
        params:
          reverse: true
          symmetric: false
        # The naming of the nets on this footprint is different from the Corne schematics.
        nets:
          A: ""
          B: VCC
          C: GND
          D: P0
      jumper_l:
        type: jumper
        anchor:
          ref:
            - matrix_inner_top
          shift: [23.5, -34 + controller_shift_y]
          rotate: 270
        params:
          side: B
        nets:
          from: Braw
          to: Bplus
      jumper_r:
        type: jumper
        anchor:
          ref:
            - matrix_inner_top
          shift: [23.5, -34 + controller_shift_y]
          rotate: 270
        params:
          side: F
        nets:
          from: Braw
          to: Bplus
      slider_l:
        type: slider
        anchor:
          ref:
            - matrix_inner_top
          shift: [30, -34 + controller_shift_y]
          rotate: 270
        params:
          side: F
        nets:
          from: Braw
          to: Bplus
      slider_r:
        type: slider
        anchor:
          ref:
            - matrix_inner_top
          shift: [30, -34 + controller_shift_y]
          rotate: 270
        params:
          side: B
        nets:
          from: Braw
          to: Bplus
      reset:
        type: button
        anchor:
          ref:
            - matrix_inner_top
          shift: [17, -34 + controller_shift_y]
          rotate: 270
        params:
          variant: 2_pin_th
        nets:
          from: GND
          to: RST
      info_l:
        type: text
        anchor:
          ref:
            - matrix_pinky_bottom
          shift: [0.75 kx, 0]
        params:
          text: "samoklava v0.2\\nBy Mr. Ostling"
          justify: left
      info_r:
        type: text
        anchor:
          ref:
            - matrix_pinky_bottom
          shift: [0.75 kx, 0]
        params:
          layer: B.SilkS
          text: "samoklava v0.2\\nBy Mr. Ostling"
          justify: right mirror
